module Test.System.IO where

import Test.QuickCheck (TestGroup(..), TestResult, quickCheck1)
import Prelude
import System.IO (writeFile, readFile, appendFile)
import System.Dir (deleteFile)

filepath :: String
filepath = "./tests/test.txt"

writeAndReadTest :: IO Bool
writeAndReadTest = do
    writeFile filepath <<"hello, world">>
    rf <- readFile filepath
    deleteFile filepath
    pure $ rf == <<"hello, world">>

appendTest :: IO (Bool)
appendTest = do
    writeFile filepath <<"hello, world">>
    appendFile filepath <<" Hamler, Haskell">>
    rf <- readFile filepath
    deleteFile filepath
    pure $ rf == <<"hello, world Hamler, Haskell">>

test :: TestGroup (Integer -> IO TestResult)
test = Exe [
    quickCheck1 "read and write " writeAndReadTest
   ,quickCheck1 "append" appendTest
]